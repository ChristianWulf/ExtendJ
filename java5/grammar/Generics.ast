/** A generic class declaration. */
GenericClassDecl : ClassDecl ::= Modifiers <ID:String> [SuperClass:Access] Implements:Access*
    BodyDecl* TypeParameter:TypeVariable*;
GenericInterfaceDecl : InterfaceDecl ::= Modifiers <ID:String> SuperInterface:Access* BodyDecl*
    TypeParameter:TypeVariable*;

/** A specific parameterization of a generic class declaration. */
ParClassDecl : ClassDecl ::= Argument:Access* /[SuperClass:Access]/ /Implements:Access*/ BodyDecl*;
RawClassDecl : ParClassDecl ::= /Argument:Access*/;

ParInterfaceDecl : InterfaceDecl ::= Argument:Access* /SuperInterface:Access*/ BodyDecl*;
RawInterfaceDecl : ParInterfaceDecl ::= /Argument:Access*/;

/** Parameterized type access. */
ParTypeAccess : Access ::= TypeAccess:Access TypeArgument:Access*;

TypeVariable : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;

abstract AbstractWildcard : Access;
Wildcard : AbstractWildcard;
WildcardExtends : AbstractWildcard ::= Access;
WildcardSuper : AbstractWildcard ::= Access;

abstract AbstractWildcardType : TypeDecl;
WildcardType : AbstractWildcardType;
WildcardExtendsType : AbstractWildcardType ::= Access;
WildcardSuperType : AbstractWildcardType ::= Access;

SubstitutedBodyDecl : BodyDecl ::= <Original:BodyDecl> <Parameterization:Parameterization>;

MethodDeclSubstituted : MethodDecl ::= <Original:MethodDecl>;
ConstructorDeclSubstituted : ConstructorDecl ::= <Original:ConstructorDecl>;
FieldDeclSubstituted : FieldDecl ::= <Original:FieldDecl>;
FieldDeclarationSubstituted : FieldDeclarator ::= <Original:FieldDeclarator>;
ParameterDeclarationSubstituted : ParameterDeclaration ::= <Original:ParameterDeclaration>;
VariableArityParameterDeclarationSubstituted : VariableArityParameterDeclaration ::=
    <Original:VariableArityParameterDeclaration>;

ClassDeclSubstituted : ClassDecl ::= <Original:TypeDecl>;
InterfaceDeclSubstituted : InterfaceDecl ::= <Original:TypeDecl>;
GenericClassDeclSubstituted : GenericClassDecl ::= <Original:TypeDecl>;
GenericInterfaceDeclSubstituted : GenericInterfaceDecl ::= <Original:TypeDecl>;

LUBType : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;
GLBType : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;

WildcardsCompilationUnit : CompilationUnit;

BridgeMethodDecl : MethodDecl;
