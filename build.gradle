buildscript {
	repositories.mavenLocal()
	repositories.maven {
		url 'http://jastadd.org/mvn/'
	}
	dependencies {
		classpath group: 'org.jastadd', name: 'jastaddgradle', version: '1.9'
	}
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jastadd'

jastadd {
	modules 'java4', 'java5', 'java6', 'java7', 'java8'

	// JastAddJ build parameters
	// use -Djastadd.module="..." to select module to build
	// default is "java7 backend"
	module = System.properties['jastadd.module'] ?: "java7 backend"

	astPackage = "AST"
	genDir = "src/gen"
	buildInfoDir = "src/gen-res"
	parser.name = "JavaParser"
}

if (jastadd.module.name.endsWith('backend'))
	mainClassName = 'org.jastadd.jastaddj.JavaCompiler'
else
	mainClassName = 'org.jastadd.jastaddj.JavaChecker'
jar.baseName = 'jastaddj'
jar.manifest.attributes 'Main-Class': mainClassName
jar.destinationDir = projectDir

// java -source and -target
sourceCompatibility = '1.6'
targetCompatibility = '1.6'

dependencies {
	compile group: 'org.apache.ant', name: 'ant', version: '1.9.4'
}

sourceSets {
	main {
		resources {
			srcDir 'src/res'
			srcDir jastadd.buildInfoDir
		}
	}
}

processResources.dependsOn 'updateVersionString'

// use git describe to update the version string
task updateVersionString << {
	def out = new StringBuilder()
	def err = new StringBuilder()
	def command = ['git', 'describe']
	def proc = command.execute()
	proc.waitForProcessOutput(out, err)
	if (proc.exitValue()) {
		println "warning: failed to run git describe to update version name"
		println "${err}"
	} else {
		if (err) println "${err}"
		def outputFile = file('src/res/Version.properties')
		ant.propertyfile(file: outputFile) {
			entry(key: 'version', value: out.toString().readLines()[0])
		}
		command = ['git', 'update-index', '--assume-unchanged', outputFile.path]
		out.setLength(0)
		err.setLength(0)
		proc = command.execute()
		proc.waitForProcessOutput(out, err)
		if (proc.exitValue()) {
			println 'warning: git update-index failed'
			println "${err}"
		}
	}
}

