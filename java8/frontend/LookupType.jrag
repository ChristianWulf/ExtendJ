aspect LookupType {

	/*
	These refines are important for the lambda expressions, because the this
	and super keywords for lambdas refer to the same thing that they do in outer 
	context, which means the anonymous classes declared by the lambda should NOT
	be the result type for a this or super access. These refines makes sure to
	bypass all hostTypes which are an anonymous lambda class until another hostType
	is found.  
	*/
	refine GenericsTypeAnalysis
	eq ThisAccess.decl() {
		TypeDecl typeDecl;
		if(isQualified())
			typeDecl = qualifier().type();
		else {
			typeDecl = hostType();
			while(typeDecl instanceof LambdaAnonymousDecl)
				typeDecl = ((LambdaAnonymousDecl)typeDecl).enclosingLambda().hostType();
		}
		
		if(typeDecl instanceof ParTypeDecl)
			typeDecl = ((ParTypeDecl)typeDecl).genericDecl();
		return typeDecl;
	}
	
	refine GenericsTypeAnalysis
	eq SuperAccess.decl() {
		TypeDecl typeDecl;
		if(isQualified())
			typeDecl = qualifier().type();
		else {
			typeDecl = hostType();
			while(typeDecl instanceof LambdaAnonymousDecl)
				typeDecl = ((LambdaAnonymousDecl)typeDecl).enclosingLambda().hostType();
		}
		
		if(typeDecl instanceof ParTypeDecl)
			typeDecl = ((ParTypeDecl)typeDecl).genericDecl();
		return typeDecl;
	}
}