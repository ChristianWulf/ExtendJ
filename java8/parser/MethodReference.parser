/*
type_arguments can contain wild cards, have to be checked with semantic analysis instead
*/

Expr primary_no_new_array = method_reference;

Expr method_reference = 
	primary.p DOUBLECOLON type_arguments.a? IDENTIFIER.i
		{: return new PrimaryMethodReference(a, i, p); :}
;

Expr method_reference = 
	name.n DOT SUPER DOUBLECOLON type_arguments.a? IDENTIFIER.i
		{: return new SuperMethodReference(a, i, new Opt(n)); :}
	| SUPER DOUBLECOLON type_arguments.a? IDENTIFIER.i
		{: return new SuperMethodReference(a, i, new Opt()); :}
; 

Expr method_reference = 
	name.n DOUBLECOLON type_arguments.a? IDENTIFIER.i
		{: return new ReferenceTypeMethodReference(a, i, n); :}
	| nongeneric_array_type.r DOUBLECOLON type_arguments.a? IDENTIFIER.i
		{: return new ReferenceTypeMethodReference(a, i, r); :}
	| name.n LTVALUE type_argument_list_1.a1 dims.d? DOUBLECOLON type_arguments.a2? IDENTIFIER.i
		{: return new ReferenceTypeMethodReference(a2, i, new ParTypeAccess(n, a1).addArrayDims(d)); :}
;